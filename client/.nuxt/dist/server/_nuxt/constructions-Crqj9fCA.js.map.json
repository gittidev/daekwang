{"file":"constructions-Crqj9fCA.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAKO,SAAS,SAAS,SAAS,MAAM,MAAM;AAC5C,QAAM,CAAC,OAAO,CAAA,GAAI,OAAO,IAAI,OAAO,SAAS,WAAW,CAAC,CAAE,GAAE,IAAI,IAAI,CAAC,MAAM,IAAI;AAChF,QAAM,WAAW,SAAS,MAAM,QAAQ,OAAO,CAAC;AAChD,QAAM,OAAO,KAAK,OAAO,KAAK,CAAC,SAAS,OAAO,SAAS,UAAU,WAAW,SAAS,QAAQ,IAAI,GAAG,uBAAuB,IAAI,CAAC,CAAC;AAClI,MAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,UAAM,IAAI,UAAU,6CAA6C,IAAI;AAAA,EACzE;AACE,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,uCAAuC;AAAA,EAC3D;AACE,QAAM,MAAM,SAAS,UAAU,OAAO,OAAO;AAC7C,MAAI,CAAC,KAAK,WAAW,OAAO,SAAS,UAAU,aAAa,SAAS,MAAM,CAAC,MAAM,OAAO,SAAS,MAAM,CAAC,MAAM,MAAM;AACnH,UAAM,IAAI,MAAM,6DAA6D;AAAA,EACjF;AACE,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA,OAAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACP,IAAM;AACJ,QAAM,gBAAgB,SAAS;AAAA,IAC7B,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO,OAAO,KAAK,UAAU,YAAY,SAAS,KAAK;AAAA,EAC3D,CAAG;AACD,QAAM,oBAAoB;AAAA,IACxB;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAOA,WAAU,QAAQ,CAAE,IAAG,CAAC,eAAe,UAAU,GAAGA,UAAS,CAAE,CAAA;AAAA,EACvE;AAID,MAAI;AACJ,QAAM,YAAY,aAAa,KAAK,MAAM;;AACxC,mDAAY,UAAZ,oCAAoB,IAAI,aAAa,0EAA0E,YAAY;AAC3H,iBAAa,OAAO,oBAAoB,cAAc,IAAI,gBAAiB,IAAG,CAAE;AAChF,UAAM,gBAAgB,QAAQ,KAAK,OAAO;AAC1C,QAAI;AACJ,QAAI,eAAe;AACjB,kBAAY,WAAW,MAAM,WAAW,MAAM,IAAI,aAAa,mCAAmC,YAAY,CAAC,GAAG,aAAa;AAC/H,iBAAW,OAAO,UAAU,MAAM,aAAa,SAAS;AAAA,IAC9D;AACI,QAAI,UAAU,KAAK,UAAU,WAAW;AACxC,QAA0B,CAAC,KAAK,QAAQ;AACtC,YAAM,eAAe,OAAO,SAAS,UAAU,YAAY,SAAS,MAAM,CAAC,MAAM,QAAQ,CAAC,QAAQ,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,EAAE,CAAC,MAAM;AAChJ,UAAI,cAAc;AAChB,kBAAU,gBAAiB;AAAA,MACnC;AAAA,IACA;AACI,WAAO,QAAQ,SAAS,OAAO,EAAE,QAAQ,WAAW,QAAQ,GAAG,eAAe,EAAE,QAAQ,MAAM;AAC5F,mBAAa,SAAS;AAAA,IAC5B,CAAK;AAAA,EACF,GAAE,iBAAiB;AACpB,SAAO;AACT;AAgBA,SAAS,uBAAuB,MAAM;;AACpC,QAAM,WAAW;AAAA,MACf,aAAQ,KAAK,MAAM,MAAnB,mBAAsB,kBAAiB;AAAA,IACvC,QAAQ,KAAK,OAAO;AAAA,EACrB;AACD,aAAW,QAAQ,CAAC,KAAK,UAAU,KAAK,KAAK,GAAG;AAC9C,UAAM,MAAM,QAAQ,IAAI;AACxB,QAAI,CAAC,KAAK;AACR;AAAA,IACN;AACI,UAAM,YAAY,CAAE;AACpB,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,GAAG,GAAG;AAC9C,gBAAU,QAAQ,GAAG,CAAC,IAAI,QAAQ,KAAK;AAAA,IAC7C;AACI,aAAS,KAAK,SAAS;AAAA,EAC3B;AACE,SAAO;AACT;;;;;;;;;;ACjGc,cAAU,cAAc,EAAE;AACxC,UAAM,SAAS,iBAAiB;AAC1B,UAAA;AAAA,MACJ,QAAQ,EAAE,OAAO;AAAA,IAAA,IACf;AACJ,UAAM,QAAQ;AAKd,UAAM,OAAO,IAAI,EAAE,GAAG,MAAM,cAAc;AAC7B,QAAiB,IAAI;AAClC,UAAM,aAAa,IAAmB,KAAK,MAAM,aAAa,IAAI;AAC5D,UAAA,cAAc,IAAI,KAAK;AAGvB,UAAA,YAAY,MAAI,UAAK,MAAM,WAAX,mBAAmB,MAAM,OAAO,OAAM,EAAE;AACxD,UAAA,UAAU,MAAI,UAAK,MAAM,WAAX,mBAAmB,MAAM,OAAO,OAAM,EAAE;AAG5D,UAAM,iBAAiB,MAAI,UAAK,MAAM,gBAAX,mBAAwB,qBAAoB,EAAE;AAGnE,UAAA,gBAAgB,CAAC,QAAQ;AAC7B,YAAM,SAAS,IAAI,QAAQ,UAAU,EAAE;AACvC,WAAK,MAAM,cAAc,SAAS,UAAU,GAAG;AAC/C,qBAAe,QAAQ,SAAS,OAAO,MAAM,EAAE,mBAAmB;AAAA,IAAA,CACnE;AAGK,UAAA,CAAC,WAAW,OAAO,GAAG,CAAC,CAAC,OAAO,GAAG,MAAM;AAC5C,UAAI,SAAS,KAAK;AAChB,aAAK,MAAM,SAAS,GAAG,KAAK,MAAM,GAAG;AAAA,MAAA;AAAA,IACvC,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCD,UAAM,SAAS,UAAU;AACnB,UAAA,EAAE,WAAW,IAAI,cAAc;AACrC,UAAM,SAAS,iBAAiB;AAC1B,UAAA,QAAQ,UAAU,aAAa,EAAE;AAEnC,QAAA,CAAC,WAAW,OAAO;AACrB,aAAO,KAAK,cAAc;AAAA,IAAA;AAGtB,UAAA,EAAE,MAAMC,gBAAe,QAAQ,KAAI,CAAA,QAAA,SAAA,IAAAC,iBAAA,MAAM;AAAA,MAC7C,GAAG,OAAO,OAAO,MAAM;AAAA,MACvB;AAAA,QACE,SAAS;AAAA,UACP,eAAe,UAAU,KAAK;AAAA,QAAA;AAAA,MAChC;AAAA,MAEJ;AAAA,IAAA,CAAA;AAEM,UAAA,sBAAsB,IAAiC,IAAI;AAC3D,UAAA,YAAY,IAAI,KAAK;AAkB3B,UAAM,aAAa,MAAM;AACvB,0BAAoB,QAAQ;AAC5B,gBAAU,QAAQ;AAAA,IACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["watch","constructions","_withAsyncContext"],"sources":["../../../../node_modules/nuxt/dist/app/composables/fetch.js","../../../../components/admin/ConstructionForm.vue","../../../../pages/admin/constructions.vue"],"sourcesContent":["import { computed, reactive, toValue } from \"vue\";\nimport { hash } from \"ohash\";\nimport { useRequestFetch } from \"./ssr.js\";\nimport { useAsyncData } from \"./asyncData.js\";\nimport { fetchDefaults } from \"#build/nuxt.config.mjs\";\nexport function useFetch(request, arg1, arg2) {\n  const [opts = {}, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  const _request = computed(() => toValue(request));\n  const _key = opts.key || hash([autoKey, typeof _request.value === \"string\" ? _request.value : \"\", ...generateOptionSegments(opts)]);\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useFetch] key must be a string: \" + _key);\n  }\n  if (!request) {\n    throw new Error(\"[nuxt] [useFetch] request is missing.\");\n  }\n  const key = _key === autoKey ? \"$f\" + _key : _key;\n  if (!opts.baseURL && typeof _request.value === \"string\" && (_request.value[0] === \"/\" && _request.value[1] === \"/\")) {\n    throw new Error('[nuxt] [useFetch] the request URL must not start with \"//\".');\n  }\n  const {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    watch,\n    immediate,\n    getCachedData,\n    deep,\n    dedupe,\n    ...fetchOptions\n  } = opts;\n  const _fetchOptions = reactive({\n    ...fetchDefaults,\n    ...fetchOptions,\n    cache: typeof opts.cache === \"boolean\" ? void 0 : opts.cache\n  });\n  const _asyncDataOptions = {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    immediate,\n    getCachedData,\n    deep,\n    dedupe,\n    watch: watch === false ? [] : [_fetchOptions, _request, ...watch || []]\n  };\n  if (import.meta.dev && import.meta.client) {\n    _asyncDataOptions._functionName = opts._functionName || \"useFetch\";\n  }\n  let controller;\n  const asyncData = useAsyncData(key, () => {\n    controller?.abort?.(new DOMException(\"Request aborted as another request to the same endpoint was initiated.\", \"AbortError\"));\n    controller = typeof AbortController !== \"undefined\" ? new AbortController() : {};\n    const timeoutLength = toValue(opts.timeout);\n    let timeoutId;\n    if (timeoutLength) {\n      timeoutId = setTimeout(() => controller.abort(new DOMException(\"Request aborted due to timeout.\", \"AbortError\")), timeoutLength);\n      controller.signal.onabort = () => clearTimeout(timeoutId);\n    }\n    let _$fetch = opts.$fetch || globalThis.$fetch;\n    if (import.meta.server && !opts.$fetch) {\n      const isLocalFetch = typeof _request.value === \"string\" && _request.value[0] === \"/\" && (!toValue(opts.baseURL) || toValue(opts.baseURL)[0] === \"/\");\n      if (isLocalFetch) {\n        _$fetch = useRequestFetch();\n      }\n    }\n    return _$fetch(_request.value, { signal: controller.signal, ..._fetchOptions }).finally(() => {\n      clearTimeout(timeoutId);\n    });\n  }, _asyncDataOptions);\n  return asyncData;\n}\nexport function useLazyFetch(request, arg1, arg2) {\n  const [opts = {}, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  if (import.meta.dev && import.meta.client) {\n    opts._functionName ||= \"useLazyFetch\";\n  }\n  return useFetch(\n    request,\n    {\n      ...opts,\n      lazy: true\n    },\n    // @ts-expect-error we pass an extra argument with the resolved auto-key to prevent another from being injected\n    autoKey\n  );\n}\nfunction generateOptionSegments(opts) {\n  const segments = [\n    toValue(opts.method)?.toUpperCase() || \"GET\",\n    toValue(opts.baseURL)\n  ];\n  for (const _obj of [opts.params || opts.query]) {\n    const obj = toValue(_obj);\n    if (!obj) {\n      continue;\n    }\n    const unwrapped = {};\n    for (const [key, value] of Object.entries(obj)) {\n      unwrapped[toValue(key)] = toValue(value);\n    }\n    segments.push(unwrapped);\n  }\n  return segments;\n}\n","<script setup lang=\"ts\">\r\nimport { ref, watch } from \"vue\";\r\nimport type { ConstructionResponse } from \"@/types/construction\";\r\nimport { useRuntimeConfig } from \"nuxt/app\";\r\nimport { useCookie } from \"nuxt/app\";\r\nimport { useCreateConstruction } from \"@/composables/construction/useCreateConstruction\";\r\nimport { useUpdateConstruction } from \"@/composables/construction/useUpdateConstruction\";\r\n\r\nimport type { ConstructionCreateRequest } from \"@/types/construction\";\r\n\r\nconst token = useCookie(\"access_token\").value;\r\nconst config = useRuntimeConfig();\r\nconst {\r\n  public: { apiUrl },\r\n} = config;\r\nconst props = defineProps<{\r\n  construction: ConstructionResponse;\r\n}>();\r\nconst emit = defineEmits([\"saved\", \"cancel\"]);\r\n\r\nconst form = ref({ ...props.construction });\r\nconst file = ref<File | null>(null);\r\nconst previewUrl = ref<string | null>(form.value.thumbnail || null);\r\nconst isUploading = ref(false);\r\n\r\n// 날짜 입력\r\nconst startDate = ref(form.value.period?.split(\" ~ \")[0] || \"\");\r\nconst endDate = ref(form.value.period?.split(\" ~ \")[1] || \"\");\r\n\r\n// 총 금액 (포맷팅된 문자열 형태로 관리)\r\nconst totalPriceText = ref(form.value.total_price?.toLocaleString() || \"\");\r\n\r\n// 총 금액 입력 시 숫자로 파싱해 form에 반영\r\nwatch(totalPriceText, (val) => {\r\n  const digits = val.replace(/[^\\d]/g, \"\"); // 숫자만 추출\r\n  form.value.total_price = parseInt(digits || \"0\");\r\n  totalPriceText.value = digits ? Number(digits).toLocaleString() : \"\";\r\n});\r\n\r\n// 날짜 변경 시 period 필드 갱신\r\nwatch([startDate, endDate], ([start, end]) => {\r\n  if (start && end) {\r\n    form.value.period = `${start} ~ ${end}`;\r\n  }\r\n});\r\n\r\n// 파일 변경 함수\r\nconst onFileChange = (e: Event) => {\r\n  const target = e.target as HTMLInputElement;\r\n  if (target.files?.[0]) {\r\n    file.value = target.files[0];\r\n    previewUrl.value = URL.createObjectURL(file.value);\r\n  }\r\n};\r\n\r\nconst removeImage = () => {\r\n  file.value = null;\r\n  previewUrl.value = null;\r\n  form.value.thumbnail = \"\";\r\n};\r\n\r\nconst handleSubmit = async () => {\r\n  isUploading.value = true;\r\n\r\n  try {\r\n    const isNew = form.value.id === 0;\r\n\r\n    // 1️⃣ FormData 생성\r\n    const formData = new FormData();\r\n    formData.append(\"place\", form.value.place);\r\n    formData.append(\"period\", form.value.period);\r\n    formData.append(\"description\", form.value.description);\r\n    formData.append(\"is_published\", String(form.value.is_published));\r\n    formData.append(\"total_price\", String(form.value.total_price ?? \"\"));\r\n\r\n    if (file.value) {\r\n      formData.append(\"file\", file.value); // 🔥 선택된 이미지가 있다면 포함\r\n    }\r\n\r\n    // 2️⃣ API 요청\r\n    const endpoint = isNew\r\n      ? `${apiUrl}/admin/constructions/create`\r\n      : `${apiUrl}/admin/constructions/${form.value.id}`;\r\n\r\n    await $fetch(endpoint, {\r\n      method: isNew ? \"POST\" : \"PUT\",\r\n      body: formData,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    emit(\"saved\");\r\n  } catch (e) {\r\n    console.error(\"등록 실패\", e);\r\n    alert(\"저장 실패\");\r\n  } finally {\r\n    isUploading.value = false;\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <form @submit.prevent=\"handleSubmit\" class=\"space-y-4\">\r\n    <!-- 썸네일 -->\r\n    <div>\r\n      <label class=\"block font-medium mb-1\">썸네일 이미지</label>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        @change=\"onFileChange\"\r\n        class=\"block\"\r\n      />\r\n      <p v-if=\"!previewUrl\" class=\"text-sm text-gray-500 mt-1\">\r\n        이미지를 선택하거나 드래그하세요.\r\n      </p>\r\n      <div v-if=\"previewUrl\" class=\"mt-2 relative w-fit\">\r\n        <img\r\n          :src=\"previewUrl\"\r\n          alt=\"미리보기\"\r\n          class=\"w-48 h-auto border rounded\"\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          @click=\"removeImage\"\r\n          class=\"absolute top-1 right-1 bg-black bg-opacity-60 text-white text-xs px-2 py-1 rounded hover:bg-opacity-80\"\r\n        >\r\n          삭제\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 장소 -->\r\n    <div>\r\n      <label class=\"block font-medium mb-1\">장소</label>\r\n      <input\r\n        v-model=\"form.place\"\r\n        type=\"text\"\r\n        class=\"w-full px-3 py-2 border rounded\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 기간 -->\r\n    <!-- 기간 -->\r\n    <div>\r\n      <label class=\"block font-medium mb-1\">기간</label>\r\n      <div class=\"flex gap-2\">\r\n        <input\r\n          v-model=\"startDate\"\r\n          type=\"date\"\r\n          class=\"px-3 py-2 border rounded\"\r\n        />\r\n        <span class=\"self-center\">~</span>\r\n        <input v-model=\"endDate\" type=\"date\" class=\"px-3 py-2 border rounded\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 설명 -->\r\n    <div>\r\n      <label class=\"block font-medium mb-1\">설명</label>\r\n      <textarea\r\n        v-model=\"form.description\"\r\n        rows=\"3\"\r\n        class=\"w-full px-3 py-2 border rounded resize-none\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 총 금액 -->\r\n    <div>\r\n      <label class=\"block font-medium mb-1\">총 금액</label>\r\n      <input\r\n        v-model=\"totalPriceText\"\r\n        type=\"text\"\r\n        inputmode=\"numeric\"\r\n        placeholder=\"예: 1,000,000\"\r\n        class=\"w-full px-3 py-2 border rounded\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 공개 여부 -->\r\n    <div>\r\n      <label class=\"inline-flex items-center space-x-2\">\r\n        <input type=\"checkbox\" v-model=\"form.is_published\" />\r\n        <span>공개 여부</span>\r\n      </label>\r\n    </div>\r\n\r\n    <!-- 버튼 -->\r\n    <div class=\"flex justify-end gap-2 mt-4\">\r\n      <button\r\n        type=\"button\"\r\n        @click=\"$emit('cancel')\"\r\n        class=\"px-4 py-2 rounded bg-gray-300 text-gray-800 hover:bg-gray-400\"\r\n      >\r\n        취소\r\n      </button>\r\n      <button\r\n        type=\"submit\"\r\n        :disabled=\"isUploading\"\r\n        class=\"px-4 py-2 rounded bg-blue-500 text-white hover:bg-blue-600 disabled:opacity-50\"\r\n      >\r\n        {{ isUploading ? \"저장 중...\" : \"저장\" }}\r\n      </button>\r\n    </div>\r\n  </form>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { ref } from \"vue\";\r\nimport { useRouter, useFetch } from \"nuxt/app\";\r\nimport ConstructionForm from \"@/components/admin/ConstructionForm.vue\";\r\nimport { useAdminToken } from \"@/composables/useAdminToken\";\r\nimport type { ConstructionResponse } from \"@/types/construction\";\r\nconst router = useRouter();\r\nconst { isLoggedIn } = useAdminToken();\r\nconst config = useRuntimeConfig();\r\nconst token = useCookie(\"admin_token\").value;\r\n\r\nif (!isLoggedIn.value) {\r\n  router.push(\"/admin/login\");\r\n}\r\n\r\nconst { data: constructions, refresh } = await useFetch<ConstructionResponse[]>(\r\n  `${config.public.apiUrl}/admin/constructions`,\r\n  {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }\r\n);\r\n\r\nconst editingConstruction = ref<ConstructionResponse | null>(null);\r\nconst showModal = ref(false);\r\n\r\nconst startEdit = (item: ConstructionResponse | null) => {\r\n  editingConstruction.value = item\r\n    ? { ...item }\r\n    : {\r\n        id: 0,\r\n        place: \"\",\r\n        period: \"\",\r\n        description: \"\",\r\n        is_published: false,\r\n        created_at: \"\",\r\n        thumbnail: \"\",\r\n        total_price: 0,\r\n      };\r\n  showModal.value = true;\r\n};\r\n\r\nconst closeModal = () => {\r\n  editingConstruction.value = null;\r\n  showModal.value = false;\r\n};\r\n\r\nconst deleteConstruction = async (id: number) => {\r\n  if (confirm(\"정말 삭제하시겠습니까?\")) {\r\n    try {\r\n      await $fetch(`/api/admin/constructions/${id}`, { method: \"DELETE\" });\r\n      await refresh();\r\n      alert(\"삭제 완료\");\r\n    } catch (e) {\r\n      alert(\"삭제 실패\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"admin-page\">\r\n    <!-- 헤더 -->\r\n    <div class=\"flex justify-between items-center mb-6\">\r\n      <div>\r\n        <h1 class=\"text-3xl font-bold\">🛠️ 시공 내역 관리</h1>\r\n        <p class=\"text-gray-500 text-sm mt-1\">\r\n          등록된 모든 시공 정보를 확인하고 관리할 수 있습니다.\r\n        </p>\r\n      </div>\r\n      <button\r\n        @click=\"startEdit(null)\"\r\n        class=\"px-4 py-2 rounded-md bg-green-500 text-white hover:bg-green-600 transition\"\r\n      >\r\n        ➕ 등록하기\r\n      </button>\r\n    </div>\r\n\r\n    <!-- 시공 내역 표 -->\r\n    <div\r\n      v-if=\"constructions?.length\"\r\n      class=\"overflow-x-auto bg-white shadow-sm rounded-lg\"\r\n    >\r\n      <table class=\"min-w-full table-auto border-collapse\">\r\n        <thead>\r\n          <tr class=\"bg-gray-100\">\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">ID</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">장소</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">기간</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">설명</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">공개 여부</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">가격</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">등록일</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">수정/삭제</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"item in constructions\"\r\n            :key=\"item.id\"\r\n            class=\"border-b hover:bg-gray-50\"\r\n          >\r\n            <td class=\"px-4 py-2\">{{ item.id }}</td>\r\n            <td class=\"px-4 py-2\">{{ item.place }}</td>\r\n            <td class=\"px-4 py-2\">{{ item.period }}</td>\r\n            <td class=\"px-4 py-2\">{{ item.description || \"설명 없음\" }}</td>\r\n            <td class=\"px-4 py-2\">\r\n              {{ item.is_published ? \"공개\" : \"비공개\" }}\r\n            </td>\r\n            <td class=\"px-4 py-2\">\r\n              {{ item.total_price?.toLocaleString() || \"미입력\" }}\r\n            </td>\r\n            <td class=\"px-4 py-2\">{{ item.created_at.slice(0, 10) }}</td>\r\n            <td class=\"px-4 py-2\">\r\n              <button\r\n                @click=\"startEdit(item)\"\r\n                class=\"text-sm px-3 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200\"\r\n              >\r\n                ✏️ 수정\r\n              </button>\r\n              <button\r\n                @click=\"deleteConstruction(item.id)\"\r\n                class=\"text-sm px-3 py-1 bg-red-100 text-red-700 rounded hover:bg-red-200\"\r\n              >\r\n                🗑️ 삭제\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- 데이터가 없을 때 더미 화면 -->\r\n    <div v-else class=\"overflow-x-auto bg-white shadow-sm rounded-lg\">\r\n      <table class=\"min-w-full table-auto border-collapse\">\r\n        <thead>\r\n          <tr class=\"bg-gray-100\">\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">ID</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">장소</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">기간</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">설명</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">공개 여부</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">가격</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">등록일</th>\r\n            <th class=\"px-4 py-2 text-left text-gray-600\">수정/삭제</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"i in 2\" :key=\"i\" class=\"border-b hover:bg-gray-50\">\r\n            <td class=\"px-4 py-2\">1</td>\r\n            <td class=\"px-4 py-2\">예시 장소 {{ i }}</td>\r\n            <td class=\"px-4 py-2\">2023.01 ~ 2023.03</td>\r\n            <td class=\"px-4 py-2\">예시 설명</td>\r\n            <td class=\"px-4 py-2\">공개</td>\r\n            <td class=\"px-4 py-2\">100,000</td>\r\n            <td class=\"px-4 py-2\">2023-01-01</td>\r\n            <td class=\"px-4 py-2\">\r\n              <button\r\n                disabled\r\n                class=\"text-sm px-3 py-1 bg-gray-200 text-gray-400 cursor-not-allowed\"\r\n              >\r\n                ✏️ 수정\r\n              </button>\r\n              <button\r\n                disabled\r\n                class=\"text-sm px-3 py-1 bg-gray-200 text-gray-400 cursor-not-allowed\"\r\n              >\r\n                🗑️ 삭제\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- 모달 -->\r\n    <Teleport to=\"body\">\r\n      <div\r\n        v-if=\"showModal\"\r\n        class=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\"\r\n      >\r\n        <div class=\"bg-white p-6 rounded-lg w-full max-w-xl shadow-lg relative\">\r\n          <button\r\n            @click=\"closeModal\"\r\n            class=\"absolute top-3 right-3 text-gray-400 hover:text-black text-xl\"\r\n          >\r\n            ×\r\n          </button>\r\n          <h2 class=\"text-xl font-bold mb-4\">\r\n            {{\r\n              editingConstruction?.id === 0 ? \"📝 시공 등록\" : \"✏️ 시공 수정\"\r\n            }}\r\n          </h2>\r\n          <ConstructionForm\r\n            :construction=\"editingConstruction!\"\r\n            @saved=\"\r\n              () => {\r\n                closeModal();\r\n                refresh();\r\n              }\r\n            \"\r\n            @cancel=\"closeModal\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </Teleport>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.admin-page {\r\n  padding: 4rem;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  font-family: \"Inter\", sans-serif;\r\n  min-height: 100vh;\r\n}\r\n</style>\r\n"],"version":3}